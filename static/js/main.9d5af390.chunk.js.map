{"version":3,"sources":["helpers/date-util.js","helpers/dateFormatter.js","helpers/forecast-util.js","../node_modules/jspdf/dist sync","serviceWorker.js","context/RealmContext.js","containers/SignInPage.js","components/common/SearchField.js","components/common/FilterButton.js","components/common/Avatar.js","components/common/Profile.js","components/TopPanel.js","components/projects/ProjectCard.js","components/projects/ProjectsList.js","components/common/helpers/TableIcons.js","components/common/SimpleTable.js","components/common/SimpleETable.js","components/common/EditableCellTable.js","components/common/ContactsTable.js","components/common/helpers/generateTablesData.js","helpers/survey/MessageTemplate.js","helpers/survey/survey.js","components/projects/MilestonesInfo.js","components/projects/MilestonesInfoPaper.js","components/ProjectsContainer.js","graphql/graphql-operations.js","containers/MainPage.js","RealmApolloProvider.jsx","RealmApp.jsx","App.js","index.js"],"names":["module","exports","getThisMonth","now","current","Date","getFullYear","getMonth","setUTCHours","getNextMonth","utc","setHours","toEnUsDate","stringDate","toLocaleString","toDateOnly","date","d","month","getUTCMonth","day","getUTCDate","year","getUTCFullYear","length","join","formatDate","getCallFromThree","vals","qEndMonth","delta","res","i","convertForecastIntoRows","forecast","delivered_call","most_likely","delivered_qtd","expiring_call","expiring","expired_qtd","all_in","roq_risk","risk","roq_upside","upside","row","push","name","cq_field","cq_call","scheduled","webpackEmptyContext","req","e","Error","code","keys","resolve","id","Boolean","window","location","hostname","match","RealmContext","React","createContext","require","config","GOOGLE_CLIENT_ID","process","APP_NAME","COPYRIGHT_LINK","REALM_APP_ID","REALM_SERVICE_NAME","REALM_DATABASE_NAME","REALM_COLLECTION_NAME","REALM_FCST_COLLECTION_NAME","GOOGLE_REDIRECT_URI","ContextContainer","props","setUser","user","setState","state","app","setFilter","active_user_filter","profile","email","dbCollection","mongoClient","db","collection","fcstCollection","googleHandleRedirect","a","Realm","googleSignIn","credentials","google","logIn","console","error","getUserAccessToken","currentUser","refreshCustomData","accessToken","fetchFiltersDefaultValues","functions","getFiltersDefaultValues","fetchedData","regionsList","regions","sort","ownersList","owners","projectManagersList","projectManagers","setLoadProcessing","loadProcessing","setProjects","projects","cleanLocalProjects","projectWithCurrentMilestone","logOut","newFilter","filter","setSorting","newSort","field","sortNameToField","setProjectWithCurrentMilestone","setIsEditing","isEditing","watcher","event","clusterTime","operationType","fullDocument","lastUpdateTime","newProjectWithMilestone","_id","map","p","project","watch","getActiveUserName","googleClientId","realmAppId","appName","copyrightLink","region","owner","project_manager","active","pm_stage","order","stagesList","funcs","Provider","value","this","children","Component","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","submit","signInForm","width","marginBottom","justifyContent","errorBox","SignInPage","signInError","classes","Container","component","maxWidth","CssBaseline","className","Avatar","Typography","variant","type","onClick","color","align","Box","mt","Copyright","Link","href","defaultProps","SearchField","inputPlaceHolder","onKeyDown","searchContainer","searchIcon","inputBaseRoot","inputBaseInput","InputBase","placeholder","root","input","inputProps","FilterButton","filterButtonText","filterDialogTitle","filtersObject","applyButtonText","onApplyFilters","showEmptyValue","formContainer","useState","openDialog","setOpenDialog","handleClickCloseDialog","Button","Dialog","disableBackdropClick","disableEscapeKeyDown","open","onClose","DialogTitle","DialogContent","obj","FilterOption","formControl","label","currentValue","values","setValue","DialogActions","FormControl","InputLabel","htmlFor","Select","native","onChange","Input","v","img","height","borderRadius","objectFit","textBlock","marginLeft","textAlign","overflow","textOverflow","fontSize","fontWeight","avatarImage","accountName","accountEmail","src","Profile","menuId","mobileMenuId","onProfileMenuOpen","onMobileMenuOpen","sectionDesktop","sectionMobile","pictureUrl","IconButton","edge","aria-label","aria-controls","aria-haspopup","grow","flexGrow","menuButton","marginRight","title","breakpoints","up","search","position","shape","fade","common","white","padding","pointerEvents","inputRoot","inputInput","paddingLeft","transition","transitions","create","minWidth","TopPanel","fetchProjects","useContext","useEffect","needToClean","localFilter","setLocalFilter","target","searchQuery","undefined","localSort","setLocalSorting","sortObject","handleSearchKeyDown","key","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","isMobileMenuOpen","handleProfileMenuOpen","currentTarget","handleMobileMenuClose","handleMenuClose","AppBar","Toolbar","noWrap","MobileMenu","onMobileMenuClose","ProfileMenu","onMenuClose","onLogOut","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","MenuItem","info","leftInfo","float","rightInfo","pos","ProjectCard","psproject","handleOnClickMilestone","milestone","getMilestoneScheduleOnwards","schedule","getMilestoneForecast","Card","CardContent","gutterBottom","account","details","pm_project_status","product_end_date","Divider","MilestonesList","milestones","onClickMilestone","List","subheader","ListSubheader","ListItem","button","ListItemText","primary","ProjectsList","listRoot","CircularProgress","generateTableIcons","onClickEditButton","Add","forwardRef","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","SimpleTable","projectId","tableName","currentColumns","currentData","columns","setColumns","data","setData","options","sorting","paging","SimpleETable","onUpdate","icons","editable","isEditable","rowData","onRowUpdate","newData","oldData","tableKey","updateKey","dataUpdate","index","tableData","onRowUpdateCancelled","EditableCellTable","cellEditable","isCellEditable","columnDef","columnOrder","onCellEditStarted","onCellEditApproved","newValue","oldValue","Promise","reject","column","parseFloat","ContactsTable","generateSFLink","custMessageHTMLBody","custName","custEmail","encodeURIComponent","generateCustSurveyLink","ceMessageHTMLBody","ceName","ceEmail","projectDesc","generateCeSurveyLink","custMailParams","origEmail","toEmail","subject","html","ceMailParams","MilestonesInfo","onClickPMStageButton","contacts","customer","projectNameSpaceIndex","indexOf","substring","ce","alert","log","callFunction","updateOne","$set","survey_sent","survey_sent_ts","milestonesTableColumns","milestonesTableRows","account_id","opportunity","currentMilestone","render","link","rel","country","milestone_amount","summary","gap_hours","unscheduled_hours","generateMilestoneTableData","scheduleTableColumns","hours_nonbillable","hours","scheduleTableRows","s","week","revenue","toFixed","resources","generateScheduleTableData","forecastTableColumns","forecastTableRows","generateForecastTableData","contactsTableColumns","contactsTableRows","generateContactsTableData","handleUpdateRow","query","update","handleUpdateForecast","milestoneId","tableContainer","MilestonesInfoPaper","containerClasses","Grid","container","item","xs","Paper","background","minHeight","text","whiteSpace","maxHeight","ProjectsContainer","FIND_PROJECTS","gql","MainPage","queryOptions","variables","filtersInput","useLazyQuery","onCompleted","psprojectsData","onError","fetchPolicy","fetchProjectsByTrigger","timerId","setTimeout","clearTimeout","watchForUpdates","RealmApolloProvider","createApolloClient","client","setClient","graphQlUrl","ApolloClient","HttpLink","uri","fetch","headers","Authorization","cache","InMemoryCache","RealmApp","appRef","useRef","exact","path","App","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.9d5af390.chunk.js","sourcesContent":["module.exports = {\n  getThisMonth,\n  getNextMonth\n};\n\nfunction getThisMonth(now) {\n  var current = new Date(now.getFullYear(), now.getMonth(), 1);\n  \n  current.setUTCHours(0,0,0,0);\n  \n  return current;\n}\n\nfunction getNextMonth(now, utc=true) {\n  var current;\n  if (now.getMonth() === 11) {\n      current = new Date(now.getFullYear() + 1, 0, 1);\n  } else {\n      current = new Date(now.getFullYear(), now.getMonth() + 1, 1);\n  }\n  \n  if (utc)\n    current.setUTCHours(0,0,0,0);\n  else\n    current.setHours(0,0,0,0);\n  \n  return current;\n}","module.exports = {\n    toEnUsDate,\n    toDateOnly\n};\n\nfunction toEnUsDate(stringDate) {\n    return new Date(stringDate).toLocaleString(\"en-US\");\n}\n\nfunction formatDate(date) {\n    var d = new Date(date),\n        month = '' + (d.getUTCMonth() + 1),\n        day = '' + d.getUTCDate(),\n        year = d.getUTCFullYear();\n\n    if (month.length < 2) \n        month = '0' + month;\n    if (day.length < 2) \n        day = '0' + day;\n\n    return [month, day, year].join('-');\n}\n\nfunction toDateOnly(stringDate) {\n    return formatDate(new Date(stringDate));\n}","module.exports = {\n    convertForecastIntoRows,\n    getCallFromThree\n};\n\n//calculate the call based on three months rolling window\nfunction getCallFromThree(vals) {\n    var today = new Date(),\n    month = today.getMonth(),\n    qEndMonth = (month < 1) ? 1 : ((month < 4) ? 4 : ((month < 7) ? 7 : ((month < 10) ? 10 : 1)));\n\n\n    //1->4: 0,1,2\n    //2->4: 0,1\n    //10->1: 0,1,2\n    //11->1: 0,1\n    //0->1:0\n    var delta = (qEndMonth > month) ? (qEndMonth - month) : (qEndMonth + 12 - month);\n    var res = 0;\n    for (let i=0; i<delta; i++)\n    \tres += vals[i];\n\n    return res;\n}\n\nfunction convertForecastIntoRows(forecast) {\n    // In\n    // {\n    //     delivered_qtd : 15000,\n    //     expired_qtd : 500,\n    //     scheduled : {\n    //         \"0\": 600,\n    //         \"1\": 1500,\n    //         \"2\":400\n    //     },\n    //     expiring : {\n    //         \"0\": 0,\n    //         \"1\": 0,\n    //         \"2\": 0\n    //     },\n    //     most_likely : {\n    //         \"0\": 600,\n    //         \"1\": 1500,\n    //         \"2\":400\n    //     },\n    //     risk : {\n    //         \"0\": 600,\n    //         \"1\":1500,\n    //         \"2\":400\n    //     },\n    //     upside : {\n    //         \"0\": 600,\n    //         \"1\":1500,\n    //         \"2\":400\n    //     }\n    // };\n    // Out\n    // [\n    //     {name: \"Delivered\", \"0\": 15000, cq_field:\"Delivered QTD\", cq_call: 15000},\n    //     {name: \"Expired\", \"0\": 500, cq_field:\"Expired QTD\", cq_call: 500},\n    //     {name: \"Scheduled\", \"0\": 600, \"1\": 1500, \"2\": 400, cq_field:\"Delivered Call\", cq_call: 18000},\n    // ];\n    var delivered_call = getCallFromThree([forecast.most_likely[\"0\"],forecast.most_likely[\"1\"],forecast.most_likely[\"2\"]]) + forecast.delivered_qtd,\n    expiring_call = getCallFromThree([forecast.expiring[\"0\"],forecast.expiring[\"1\"],forecast.expiring[\"2\"]]) + forecast.expired_qtd,\n    all_in = delivered_call + expiring_call,\n    roq_risk = getCallFromThree([forecast.risk[\"0\"], forecast.risk[\"1\"], forecast.risk[\"2\"]]),\n    roq_upside = getCallFromThree([forecast.upside[\"0\"], forecast.upside[\"1\"], forecast.upside[\"2\"]]);\n\n\n    var row = [];\n    row.push(\n        {name: \"Delivered\", \"0\": forecast.delivered_qtd, cq_field:\"Delivered QTD\", cq_call: forecast.delivered_qtd}\n        );\n    row.push(\n        {name: \"Expired\", \"0\": forecast.expired_qtd, cq_field:\"Expired QTD\", cq_call: forecast.expired_qtd}\n        );\n    row.push(\n        {name: \"Scheduled\", \"0\": forecast.scheduled[\"0\"], \"1\" : forecast.scheduled[\"1\"], \"2\" : forecast.scheduled[\"2\"], cq_field:\"Delivered Call\", cq_call: delivered_call}\n        );\n    row.push(\n        {name: \"Expiring\", \"0\": forecast.expiring[\"0\"], \"1\" : forecast.expiring[\"1\"], \"2\" : forecast.expiring[\"2\"], cq_field:\"Expired Call\", cq_call: expiring_call},\n        );\n    row.push(\n        {name: \"Most Likely $\", \"0\": forecast.most_likely[\"0\"], \"1\" : forecast.most_likely[\"1\"], \"2\" : forecast.most_likely[\"2\"], cq_field:\"All-in Call\", cq_call: all_in},\n        );\n    row.push(\n        {name: \"Risk $\", \"0\": forecast.risk[\"0\"], \"1\" : forecast.risk[\"1\"], \"2\" : forecast.risk[\"2\"], cq_field:\"ROQ Risk\", cq_call: roq_risk},\n        );\n    row.push(\n        {name: \"Upside $\", \"0\": forecast.upside[\"0\"], \"1\" : forecast.upside[\"1\"], \"2\" : forecast.upside[\"2\"], cq_field:\"ROQ Upside\", cq_call: roq_upside},\n        );\n\n    return row;\n}","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 393;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport * as Realm from \"realm-web\";\n\nconst RealmContext = React.createContext('realm');\n\nrequire('dotenv').config();\n\nconst GOOGLE_CLIENT_ID = `${process.env.REACT_APP_GOOGLE_CLIENT_ID}` || '';\nconst APP_NAME = `${process.env.REACT_APP_NAME}` || 'Realm Test App';\nconst COPYRIGHT_LINK = `${process.env.REACT_APP_COPYRIGHT_LINK}` || 'http://localhost:3000';\nconst REALM_APP_ID = `${process.env.REACT_APP_REALM_APP_ID}` || '';\nconst REALM_SERVICE_NAME = `${process.env.REACT_APP_SERVICE_NAME}` || 'mongodb-atlas';\nconst REALM_DATABASE_NAME = `${process.env.REACT_APP_DATABASE_NAME}` || '';\nconst REALM_COLLECTION_NAME = `${process.env.REACT_APP_COLLECTION_NAME}` || '';\nconst REALM_FCST_COLLECTION_NAME = `${process.env.REACT_APP_FCST_COLLECTION_NAME}` || '';\nconst GOOGLE_REDIRECT_URI = `${process.env.REACT_APP_GOOGLE_REDIRECT_URI}` ||'http://localhost:3000/google-callback';\n\nfunction sortNameToField(name) {\n    switch(name) {\n        case 'name': return name;\n        case 'region': return name;\n        case 'owner': return name;\n        case 'expiration': return \"details.product_end_date\";\n        case 'stage': return \"details.pm_stage_sortid\";\n        default: return \"details.pm_stage_sortid\";\n    }\n}\n\nexport default class ContextContainer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...this.state,\n            googleClientId: GOOGLE_CLIENT_ID,\n            realmAppId: REALM_APP_ID,\n            appName: APP_NAME,\n            copyrightLink: COPYRIGHT_LINK,\n            app: new Realm.App(REALM_APP_ID),\n            user: null,\n            dbCollection: null,\n            fcstCollection: null,\n            filter: {region: '', owner: '', project_manager: '', name: '', active: true, active_user_filter: '', pm_stage: ''},\n            sort: {field: 'details.pm_stage_sortid', order: 'ASC'},\n            regionsList: [],\n            ownersList: [],\n            projectManagersList: [],\n            stagesList: [\"-None-\",\"Not Started\",\"Planning\",\"In Progress\",\"On Hold\",\"Cancelled\",\"Closed\"],\n            loadProcessing: false,\n            projects: null,\n            projectWithCurrentMilestone: null,\n            isEditing: false\n        };\n        this.funcs = {\n            setUser: this.setUser,\n            googleSignIn: this.googleSignIn,\n            googleHandleRedirect: this.googleHandleRedirect,\n            getUserAccessToken: this.getUserAccessToken,\n            logOut: this.logOut,\n            fetchFiltersDefaultValues: this.fetchFiltersDefaultValues,\n            setLoadProcessing: this.setLoadProcessing,\n            setProjects: this.setProjects,\n            cleanLocalProjects: this.cleanLocalProjects,\n            setFilter: this.setFilter,\n            setSorting: this.setSorting,\n            setProjectWithCurrentMilestone: this.setProjectWithCurrentMilestone,\n            setIsEditing: this.setIsEditing,\n            watcher: this.watcher,\n            getActiveUserName: this.getActiveUserName\n        };\n\n        this.lastUpdateTime = null;\n    };\n\n    setUser = (user) => {\n        this.setState({user});\n        if (this.state.app && user) {\n            this.setFilter({active_user_filter: user.profile.email});\n            const dbCollection = user\n                .mongoClient(REALM_SERVICE_NAME)\n                .db(REALM_DATABASE_NAME)\n                .collection(REALM_COLLECTION_NAME);\n            this.setState({dbCollection});\n            const fcstCollection = user\n                .mongoClient(REALM_SERVICE_NAME)\n                .db(REALM_DATABASE_NAME)\n                .collection(REALM_FCST_COLLECTION_NAME);\n            this.setState({fcstCollection});\n        }\n    };\n\n    // TODO: deprecated functionality\n    // anonymousSignIn = async () => {\n    //     const credentials = Realm.Credentials.anonymous();\n    //     try {\n    //         const user = await this.state.app.logIn(credentials);\n    //         this.setUser(user);\n    //     } catch (err) {\n    //         console.error(err);\n    //     }\n    // };\n\n    googleHandleRedirect = async () => {\n        Realm.handleAuthRedirect();\n    };\n\n    googleSignIn = async () => {\n        const credentials = Realm.Credentials.google(GOOGLE_REDIRECT_URI);\n        try {\n            const user = await this.state.app.logIn(credentials);\n            this.setUser(user);\n        } catch (err) {\n            console.error(err);\n        }\n    };\n\n    // TODO: deprecated functionality\n    // onGoogleSuccessSignIn = (response) => {\n    //     const credentials = Realm.Credentials.google(response.code);\n    //     this.state.app.logIn(credentials).then(user => {\n    //         console.log(`Logged in with id: ${user.id}`);\n    //         this.setUser(user);\n    //     }).catch(err => {\n    //         console.error('onGoogleSuccessSignIn:', err);\n    //     });\n    // };\n\n    // onGoogleSignInFailure = (response) => {\n    //     console.error('onGoogleSignInFailure:', response);\n    // }\n\n    getUserAccessToken = async () => {\n        await this.state.app.currentUser.refreshCustomData();\n        return this.state.app.currentUser.accessToken;\n    };\n\n    fetchFiltersDefaultValues = async () => {\n        if (this.state.user) {\n            const fetchedData = await this.state.user.functions.getFiltersDefaultValues();\n            this.setState(\n                {\n                    regionsList: fetchedData.regions.sort() || [],\n                    ownersList: fetchedData.owners.sort() || [],\n                    projectManagersList: fetchedData.projectManagers.sort() || [],\n                }\n            );\n        }\n    }\n\n    setLoadProcessing = loadProcessing => {\n        this.setState({loadProcessing});\n    }\n\n    setProjects = projects => {\n        this.setState({projects});\n    }\n\n    cleanLocalProjects = async () => {\n        this.setState({projects: [], projectWithCurrentMilestone: null});\n    }\n\n    logOut = async () => {\n        await this.state.app.currentUser.logOut();\n        this.setUser(this.state.app.currentUser);\n    }\n\n    setFilter = (newFilter) => {\n        const filter = {...this.state.filter, ...newFilter};\n        this.setState({filter});\n    }\n\n    setSorting = (newSort) => {\n        newSort.field = sortNameToField(newSort.field);\n        this.setState({sort: newSort});\n    }\n\n    setProjectWithCurrentMilestone = (projectWithCurrentMilestone) => {\n        this.setState({projectWithCurrentMilestone})\n    }\n\n    setIsEditing = (isEditing) => {\n        this.setState({isEditing});\n    }\n\n    watcher = async () => {\n        if (!this.state.dbCollection) return;\n        if (!this.state.user || !this.state.app.currentUser) return;\n\n        for await (let event of this.state.dbCollection.watch()) {\n            const {clusterTime, operationType, fullDocument} = event;\n\n            if (\n                (!this.lastUpdateTime || this.lastUpdateTime < clusterTime) &&\n                fullDocument\n            ) {\n                this.lastUpdateTime = clusterTime;\n                let {projects, projectWithCurrentMilestone} = this.state;\n                let newProjectWithMilestone = null;\n\n                if (operationType === 'replace' || operationType === 'update') {\n                    const {_id} = event.fullDocument;\n                    projects = projects.map(\n                        p => (p._id === _id) ? event.fullDocument : p\n                    );\n                    if (projectWithCurrentMilestone.project._id === _id)\n                        newProjectWithMilestone = {...projectWithCurrentMilestone,project: event.fullDocument}\n\n                } else if (operationType === 'insert') {\n                    projects.push(event.fullDocument);\n                }\n\n                this.setState({projects});\n                if (newProjectWithMilestone)\n                    this.setProjectWithCurrentMilestone(newProjectWithMilestone);\n            }\n        }\n    }\n\n    getActiveUserName = () => {\n        return this.state.user.profile.email;\n    }\n\n    render() {\n        return (\n            <RealmContext.Provider value={{...this.state, ...this.funcs}}>\n                {this.props.children}\n            </RealmContext.Provider>\n        )\n    }\n}\n\nexport { RealmContext };","import React from 'react';\nimport PropTypes from 'prop-types'\n\nimport Avatar from '@material-ui/core/Avatar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Link from '@material-ui/core/Link';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport GoogleButton from 'react-google-button'\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    signInForm: {\n        width: '100%',\n        marginTop: theme.spacing(3),\n        marginBottom: theme.spacing(1),\n        display: 'flex',\n        justifyContent: 'center'\n    },\n    errorBox: {\n        width: '100%',\n        marginTop: theme.spacing(1),\n        display: 'flex',\n        justifyContent: 'center'\n    }\n}));\n\nSignInPage.propTypes = {\n    googleClientId: PropTypes.string.isRequired,\n    appName: PropTypes.string.isRequired,\n    copyrightLink: PropTypes.string.isRequired,\n    onSuccess: PropTypes.func.isRequired,\n    onFailure: PropTypes.func.isRequired,\n    signInError: PropTypes.string\n}\n\nSignInPage.defaultProps = {\n    signInError: null\n}\n\nexport default function SignInPage(props) {\n    const {\n        appName,\n        copyrightLink,\n        googleSignIn,\n        signInError\n    } = props;\n\n    const classes = useStyles();\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Sign in\n                </Typography>\n\n                <div className={classes.signInForm}>\n                    <GoogleButton\n                        type=\"light\"\n                        onClick={googleSignIn}\n                    />\n\n                    {/* TODO: disabled, not actual */}\n                    {/*<Button*/}\n                    {/*    type=\"submit\"*/}\n                    {/*    variant=\"contained\"*/}\n                    {/*    color=\"primary\"*/}\n                    {/*    className={classes.submit}*/}\n                    {/*    onClick={anonymousSignIn}*/}\n                    {/*    disabled={true}*/}\n                    {/*>*/}\n                    {/*    Anonymous user*/}\n                    {/*</Button>*/}\n\n                    {/* TODO: disabled due to not working */}\n                    {/*<div className={classes.signInForm}>*/}\n                    {/*    <GoogleLogin*/}\n                    {/*        clientId={googleClientId}*/}\n                    {/*        buttonText=\"Sign in with Google\"*/}\n                    {/*        onSuccess={onSuccess}*/}\n                    {/*        onFailure={onFailure}*/}\n                    {/*        scope={'email profile'}*/}\n                    {/*        responseType={'code'}*/}\n                    {/*        disabled={true}*/}\n                    {/*    />*/}\n                    {/*</div>*/}\n                </div>\n\n                {signInError && <div className={classes.errorBox}>\n                    <Typography variant=\"body2\" color=\"error\" align=\"center\">\n                        {signInError}\n                    </Typography>\n                </div>}\n            </div>\n            <Box mt={1}>\n                <Copyright\n                    appName={appName}\n                    copyrightLink={copyrightLink}\n                />\n            </Box>\n        </Container>\n    );\n}\n\nfunction Copyright(props) {\n    const { appName, copyrightLink } = props;\n\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {'Copyright © '}\n            <Link color=\"inherit\" href={copyrightLink}>\n                {appName}\n            </Link>{' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SearchIcon from '@material-ui/icons/Search';\nimport InputBase from \"@material-ui/core/InputBase\";\n\nSearchField.propTypes = {\n    classes: PropTypes.object.isRequired,\n    inputPlaceHolder: PropTypes.string.isRequired,\n    onKeyDown: PropTypes.func.isRequired\n}\n\nexport default function SearchField(props) {\n    const {classes, inputPlaceHolder, onKeyDown} = props;\n    const {\n        searchContainer,\n        searchIcon,\n        inputBaseRoot,\n        inputBaseInput\n    } = classes;\n\n    return (\n        <div className={searchContainer}>\n            <div className={searchIcon}>\n                <SearchIcon />\n            </div>\n\n            <InputBase\n                placeholder={inputPlaceHolder}\n                classes={{\n                    root: inputBaseRoot,\n                    input: inputBaseInput\n                }}\n                inputProps={{'aria-label': 'search'}}\n                onKeyDown={onKeyDown}\n            />\n        </div>\n    )\n}\n","import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\n\nimport Input from \"@material-ui/core/Input\";\n\nFilterButton.propTypes = {\n    classes: PropTypes.object.isRequired,\n    filterButtonText: PropTypes.string.isRequired,\n    filterDialogTitle: PropTypes.string.isRequired,\n    filtersObject: PropTypes.array.isRequired,\n    applyButtonText: PropTypes.string.isRequired,\n    onApplyFilters: PropTypes.func.isRequired\n}\n\nexport default function FilterButton(props) {\n    const {\n        classes,\n        filterButtonText,\n        filterDialogTitle,\n        filtersObject,\n        applyButtonText,\n        onApplyFilters,\n        showEmptyValue\n    } = props;\n\n    const {formContainer} = classes;\n\n    const [openDialog, setOpenDialog] = useState(false);\n    const handleClickOpenDialog = () => {\n        setOpenDialog(true);\n    };\n    const handleClickCloseDialog = () => {\n        setOpenDialog(false);\n    };\n    const handleClickApplyFilters = () => {\n        onApplyFilters();\n        setOpenDialog(false);\n    }\n\n    return (\n        <div className={formContainer}>\n            <Button onClick={handleClickOpenDialog} variant=\"contained\">\n                {filterButtonText}\n            </Button>\n            <Dialog\n                disableBackdropClick\n                disableEscapeKeyDown\n                open={openDialog}\n                onClose={handleClickCloseDialog}\n            >\n                <DialogTitle>{filterDialogTitle}</DialogTitle>\n\n                <DialogContent>\n                    <form className={formContainer}>\n                        {filtersObject.map(obj => <FilterOption\n                            classes={{formControl: classes.formControl}}\n                            label={obj.label}\n                            currentValue={obj.currentValue}\n                            values={obj.values}\n                            setValue={obj.setValue}\n                            showEmptyValue={showEmptyValue}\n                        />)}\n                    </form>\n                </DialogContent>\n\n                <DialogActions>\n                    <Button onClick={handleClickCloseDialog} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button onClick={handleClickApplyFilters} color=\"primary\">\n                        {applyButtonText}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    )\n}\n\nfunction FilterOption(props) {\n    const {\n        classes,\n        label, currentValue, values, setValue,\n        showEmptyValue\n    } = props;\n\n    const {formControl} = classes;\n\n    return (\n        <FormControl className={formControl}>\n            <InputLabel htmlFor=\"demo-dialog-native\">{label}</InputLabel>\n            <Select\n                native\n                value={currentValue}\n                onChange={setValue}\n                input={<Input id=\"demo-dialog-native\" />}\n            >\n                {showEmptyValue && <option value=''/>}\n                {values.map(v => <option value={v}>{v}</option>)}\n            </Select>\n        </FormControl>\n    )\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\n\nconst useStyles = makeStyles((theme) => ({\n    img: {\n        width: '35px',\n        height: '35px',\n        borderRadius: '50%',\n        objectFit: 'cover'\n    },\n    textBlock: {\n        display: 'block',\n        marginLeft: '0.5rem',\n        textAlign: 'left',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n    },\n    name: {\n        fontSize: '14px',\n        fontWeight: '600',\n    },\n    email: {\n        fontSize: '11px',\n        fontWeight: '500',\n    }\n}));\n\nAvatar.propTypes = {\n    avatarImage: PropTypes.string,\n    accountName: PropTypes.string,\n    accountEmail: PropTypes.string\n}\n\nexport default function Avatar(props) {\n    const classes = useStyles();\n\n    const {\n        avatarImage,\n        accountName,\n        accountEmail\n    } = props;\n\n    return (<>\n        {avatarImage ?\n            <img src={avatarImage} className={classes.img}/> :\n            <AccountCircle />\n        }\n        <div className={classes.textBlock}>\n            <div className={classes.name}>\n                {accountName ? accountName : 'Anonymous'}\n            </div>\n            <div className={classes.email}>\n                {accountEmail ? accountEmail : 'anonymous'}\n            </div>\n        </div>\n    </>)\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MoreIcon from '@material-ui/icons/MoreVert';\n\nimport Avatar from \"./Avatar\";\n\nProfile.propTypes = {\n    classes: PropTypes.object.isRequired,\n    profile: PropTypes.object.isRequired,\n    menuId: PropTypes.string.isRequired,\n    mobileMenuId: PropTypes.string.isRequired,\n    onProfileMenuOpen: PropTypes.func.isRequired,\n    onMobileMenuOpen: PropTypes.func.isRequired\n}\n\nexport default function Profile(props) {\n    const {\n        classes, profile,\n        menuId, mobileMenuId,\n        onProfileMenuOpen,\n        onMobileMenuOpen\n    } = props;\n\n    const {\n        sectionDesktop,\n        sectionMobile,\n    } = classes;\n\n    const {email, name, pictureUrl} = profile;\n\n    return (<>\n        <div className={sectionDesktop}>\n            <IconButton\n                edge=\"end\"\n                aria-label=\"account of current user\"\n                aria-controls={menuId}\n                aria-haspopup=\"true\"\n                onClick={onProfileMenuOpen}\n                color=\"inherit\"\n            >\n                <Avatar\n                    avatarImage={pictureUrl}\n                    accountName={name}\n                    accountEmail={email}\n                />\n            </IconButton>\n        </div>\n\n        <div className={sectionMobile}>\n            <IconButton\n                aria-label=\"show more\"\n                aria-controls={mobileMenuId}\n                aria-haspopup=\"true\"\n                onClick={onMobileMenuOpen}\n                color=\"inherit\"\n            >\n                <MoreIcon />\n            </IconButton>\n        </div>\n    </>)\n}","import React, {useContext, useEffect, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\n\nimport {RealmContext} from \"../context/RealmContext\";\nimport SearchField from \"./common/SearchField\";\nimport FilterButton from \"./common/FilterButton\";\nimport Profile from \"./common/Profile\";\nimport Avatar from \"./common/Avatar\";\n\nTopPanel.propTypes = {\n    fetchProjects: PropTypes.func.isRequired\n};\n\nconst useStyles = makeStyles((theme) => ({\n    grow: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        display: 'none',\n        [theme.breakpoints.up('sm')]: {\n            display: 'block',\n        },\n    },\n    search: {\n        position: 'relative',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        '&:hover': {\n            backgroundColor: fade(theme.palette.common.white, 0.25),\n        },\n        marginRight: theme.spacing(2),\n        marginLeft: 0,\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            marginLeft: theme.spacing(3),\n            width: 'auto',\n        },\n    },\n    searchIcon: {\n        padding: theme.spacing(0, 2),\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    inputRoot: {\n        color: 'inherit',\n    },\n    inputInput: {\n        padding: theme.spacing(1, 1, 1, 0),\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        [theme.breakpoints.up('md')]: {\n            width: '20ch',\n        },\n    },\n    formContainer: {\n        marginLeft: theme.spacing(2)\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n    sectionDesktop: {\n        display: 'none',\n        [theme.breakpoints.up('md')]: {\n            display: 'flex',\n        },\n    },\n    sectionMobile: {\n        display: 'flex',\n        [theme.breakpoints.up('md')]: {\n            display: 'none',\n        },\n    },\n}));\n\nexport default function TopPanel(props) {\n    const classes = useStyles();\n\n    const {fetchProjects} = props;\n    const {\n        filter, setFilter, sort, setSorting,\n        regionsList, ownersList, projectManagersList, stagesList,\n        fetchFiltersDefaultValues, setLoadProcessing,\n        getActiveUserName, user, logOut\n    } = useContext(RealmContext);\n\n    useEffect(() => {\n        fetchFiltersDefaultValues();\n    }, []);\n\n    useEffect(() => {\n        setLoadProcessing(true);\n        fetchProjects({needToClean: true});\n    }, [filter, sort]);\n\n    const {profile} = user;\n    const [localFilter, setLocalFilter] = useState(filter);\n\n    const filtersObject = [\n        {\n            label: 'Region',\n            currentValue: localFilter.region,\n            values: regionsList,\n            setValue: event => {\n                setLocalFilter({...localFilter, region: event.target.value});\n            }\n        },\n        {\n            label: 'Owner',\n            currentValue: localFilter.owner,\n            values: ownersList,\n            setValue: event => {\n                setLocalFilter({...localFilter, owner: event.target.value});\n            }\n        },\n        {\n            label: 'PM',\n            currentValue: localFilter.project_manager,\n            values: projectManagersList,\n            setValue: event => {\n                setLocalFilter({...localFilter, project_manager: event.target.value});\n            }\n        },\n        {\n            label: 'Stage',\n            currentValue: localFilter.pm_stage,\n            values: stagesList,\n            setValue: event => {\n                setLocalFilter({...localFilter, pm_stage: event.target.value});\n            }\n        },\n        {\n            label: 'Only Active',\n            currentValue: localFilter.active ? \"Yes\" : \"No\",\n            values: [\"Yes\",\"No\"],\n            setValue: event => {\n                setLocalFilter({\n                    ...localFilter,\n                    active: (event.target.value === \"Yes\")\n                });\n            }\n        },\n        {\n            label: 'Only my projects',\n            currentValue: localFilter.active_user_filter ? \"Yes\" : \"No\",\n            values: [\"Yes\",\"No\"],\n            setValue: event => {\n                setLocalFilter({\n                    ...localFilter,\n                    active_user_filter: (event.target.value === \"Yes\")\n                        ? getActiveUserName()\n                        : ''\n                });\n            }\n        }\n    ];\n\n    const onApplyFilters = (searchQuery = undefined) => {\n        if (searchQuery !== undefined) {\n            setLocalFilter({...localFilter, name: searchQuery});\n            setFilter({...localFilter, name: searchQuery});\n        } else {\n            setFilter(localFilter);\n        }\n    }\n\n    const [localSort, setLocalSorting] = useState(sort);\n    const sortObject = [\n        {\n            label: 'Field',\n            currentValue: localSort.field,\n            values: ['name', 'region', 'owner','expiration','stage'],\n            setValue: event => {\n                setLocalSorting({...localSort, field: event.target.value});\n            }\n        },\n        {\n            label: 'Order',\n            currentValue: localSort.order,\n            values: ['ASC', 'DESC'],\n            setValue: event => {\n                setLocalSorting({...localSort, order: event.target.value});\n            }\n        }\n    ];\n\n    const onApplySorting = () => {\n        setSorting(localSort);\n    }\n\n    const handleSearchKeyDown = async (event) => {\n        if (event.key === 'Enter') {\n            onApplyFilters(event.target.value);\n        }\n    }\n\n    const menuId = 'primary-search-account-menu';\n    const mobileMenuId = 'primary-search-account-menu-mobile';\n\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n\n    const isMenuOpen = Boolean(anchorEl);\n    const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n    const handleProfileMenuOpen = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleMobileMenuOpen = (event) => {\n        setMobileMoreAnchorEl(event.currentTarget);\n    };\n    const handleMobileMenuClose = () => {\n        setMobileMoreAnchorEl(null);\n    };\n\n    const handleMenuClose = () => {\n        setAnchorEl(null);\n        handleMobileMenuClose();\n    };\n    const handleLogOut = () => {\n        logOut();\n        handleMenuClose();\n    }\n\n    return (\n        <div className={classes.grow}>\n            <AppBar position=\"fixed\">\n                <Toolbar>\n                    <Typography className={classes.title} variant=\"h6\" noWrap>\n                        Projects\n                    </Typography>\n                    <SearchField\n                        classes={{\n                            searchContainer: classes.search,\n                            searchIcon: classes.searchIcon,\n                            inputBaseRoot: classes.inputRoot,\n                            inputBaseInput: classes.inputInput\n                        }}\n                        inputPlaceHolder={'Search projects'}\n                        onKeyDown={handleSearchKeyDown}\n                    />\n                    <FilterButton\n                        classes={{\n                            formContainer: classes.formContainer,\n                            formControl: classes.formControl\n                        }}\n                        filterButtonText={'Filters'}\n                        filterDialogTitle={'Filter projects'}\n                        filtersObject={filtersObject}\n                        applyButtonText={'Apply filters'}\n                        onApplyFilters={onApplyFilters}\n                        showEmptyValue={true}\n                    />\n                    <FilterButton\n                        classes={{\n                            formContainer: classes.formContainer,\n                            formControl: classes.formControl\n                        }}\n                        filterButtonText={'Sort'}\n                        filterDialogTitle={'Sort projects'}\n                        filtersObject={sortObject}\n                        applyButtonText={'Sort'}\n                        onApplyFilters={onApplySorting}\n                        showEmptyValue={false}\n                    />\n                    <div className={classes.grow} />\n\n                    <Profile\n                        classes={{\n                            sectionDesktop: classes.sectionDesktop,\n                            sectionMobile: classes.sectionMobile\n                        }}\n                        profile={profile}\n                        menuId={menuId}\n                        mobileMenuId={mobileMenuId}\n                        onProfileMenuOpen={handleProfileMenuOpen}\n                        onMobileMenuOpen={handleMobileMenuOpen}\n                    />\n                </Toolbar>\n            </AppBar>\n\n            <MobileMenu\n                mobileMoreAnchorEl={mobileMoreAnchorEl}\n                mobileMenuId={mobileMenuId}\n                isMobileMenuOpen={isMobileMenuOpen}\n                onMobileMenuClose={handleMobileMenuClose}\n                onProfileMenuOpen={handleProfileMenuOpen}\n                profile={profile}\n            />\n\n            <ProfileMenu\n                anchorEl={anchorEl}\n                menuId={menuId}\n                isMenuOpen={isMenuOpen}\n                onMenuClose={handleMenuClose}\n                onLogOut={handleLogOut}\n            />\n        </div>\n    );\n}\n\nfunction ProfileMenu(props) {\n    const {\n        anchorEl, menuId, isMenuOpen,\n        onMenuClose, onLogOut\n    } = props;\n\n    return (\n        <Menu\n            anchorEl={anchorEl}\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n            id={menuId}\n            keepMounted\n            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n            open={isMenuOpen}\n            onClose={onMenuClose}\n        >\n            <MenuItem onClick={onLogOut}>Log Out</MenuItem>\n        </Menu>\n    )\n}\n\nfunction MobileMenu(props) {\n    const {\n        mobileMoreAnchorEl, mobileMenuId,\n        isMobileMenuOpen, onMobileMenuClose,\n        onProfileMenuOpen, profile\n    } = props;\n\n    const {name, email, pictureUrl} = profile;\n\n    return (\n        <Menu\n            anchorEl={mobileMoreAnchorEl}\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n            id={mobileMenuId}\n            keepMounted\n            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n            open={isMobileMenuOpen}\n            onClose={onMobileMenuClose}\n        >\n            <MenuItem onClick={onProfileMenuOpen}>\n                <IconButton\n                    aria-label=\"account of current user\"\n                    aria-controls=\"primary-search-account-menu\"\n                    aria-haspopup=\"true\"\n                    color=\"inherit\"\n                >\n                    <Avatar\n                        avatarImage={pictureUrl}\n                        accountName={name}\n                        accountEmail={email}\n                    />\n                </IconButton>\n            </MenuItem>\n        </Menu>\n    )\n}\n","import React, {useContext} from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from \"@material-ui/core/Divider\";\nimport List from \"@material-ui/core/List\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\n\nimport {RealmContext} from \"../../context/RealmContext\";\nimport {toEnUsDate,toDateOnly} from \"../../helpers/dateFormatter\";\n\nconst useStyles = makeStyles({\n    root: {\n        width: '55vh',\n        marginBottom: 5\n    },\n    info: {\n        display: 'inline-block',\n        width: '100%'\n    },\n    leftInfo: {\n        float: 'left'\n    },\n    rightInfo: {\n        float: 'right'\n    },\n    title: {\n        fontSize: 14,\n    },\n    pos: {\n        marginBottom: 12,\n    },\n});\n\nProjectCard.propTypes = {\n    psproject: PropTypes.object.isRequired\n};\n\nexport default function ProjectCard(props) {\n    const classes = useStyles();\n\n    const {psproject} = props;\n    const {user, setProjectWithCurrentMilestone} = useContext(RealmContext);\n\n    const handleOnClickMilestone = async (milestone) => {\n        var schedule = await user.functions.getMilestoneScheduleOnwards(milestone._id);\n        var forecast = await user.functions.getMilestoneForecast(milestone._id);\n        setProjectWithCurrentMilestone({\n            // projectId: psproject._id,\n            // milestoneId: milestone._id\n            project: psproject,\n            milestone: {...milestone, schedule},\n            forecast: forecast\n        });\n    }\n\n    return (\n        <Card className={classes.root}>\n            <CardContent>\n                <div className={classes.info}>\n                    <div className={classes.leftInfo}>\n                        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                            {psproject.account}\n                        </Typography>\n                    </div>\n                    <div className={classes.rightInfo}>\n                        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                            {psproject.region}\n                        </Typography>\n                    </div>\n                </div>\n\n                <Typography variant=\"h5\" component=\"h2\">\n                    {psproject.name}\n                </Typography>\n\n                <div className={classes.info}>\n                    <div className={classes.leftInfo}>\n                        <Typography className={classes.pos} color=\"textSecondary\" gutterBottom>\n                            Owner: {psproject.owner}\n                        </Typography>\n                    </div>\n                    <div className={classes.rightInfo}>\n                        <Typography className={classes.pos} color=\"textSecondary\" gutterBottom>\n                            PM: {psproject.project_manager}\n                        </Typography>\n                    </div>\n                </div>\n\n                <Typography variant=\"body2\" component=\"p\">\n                    <b>Stage:</b> {psproject.details.pm_stage}\n                </Typography>\n                <Typography variant=\"body2\" component=\"p\">\n                    <b>Status:</b> {psproject.details.pm_project_status}\n                </Typography>\n                <Typography variant=\"body2\" component=\"p\">\n                    <b>Expires:</b> {toDateOnly(psproject.details.product_end_date)}\n                </Typography>\n                <Divider />\n\n                <MilestonesList\n                    milestones={psproject.milestones}\n                    onClickMilestone={handleOnClickMilestone}\n                />\n            </CardContent>\n        </Card>\n    );\n}\n\nfunction MilestonesList(props) {\n    const {milestones, onClickMilestone} = props;\n\n    return (\n        <List subheader={<li />}>\n            <ListSubheader>Milestones</ListSubheader>\n            {milestones && milestones.map(milestone => {\n                return (\n                    <ListItem button onClick={() => onClickMilestone(milestone)} key={milestone._id}>\n                        <ListItemText primary={milestone.name} />\n                    </ListItem>\n                )\n            })}\n        </List>\n    )\n}","import React, {useContext} from 'react';\nimport PropTypes from 'prop-types';\nimport List from \"@material-ui/core/List\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport {RealmContext} from \"../../context/RealmContext\";\nimport ProjectCard from \"./ProjectCard\";\n\nProjectsList.propTypes = {\n    classes: PropTypes.object.isRequired,\n}\n\nexport default function ProjectsList(props) {\n    const {classes} = props;\n\n    const {loadProcessing, projects} = useContext(RealmContext);\n\n    return (\n        <List component=\"nav\" className={classes.listRoot} aria-label=\"contacts\">\n            <ListSubheader color=\"primary\">\n                <Typography variant=\"h5\">\n                    Total projects: {projects ? projects.length : 0}\n                </Typography>\n            </ListSubheader>\n\n            {loadProcessing && <ListItem>\n                <CircularProgress />\n            </ListItem>}\n\n            {!loadProcessing && projects && projects.map(project => {\n                return (\n                    <ListItem key={project._id}>\n                        <ProjectCard psproject={project}/>\n                    </ListItem>\n                )\n            })}\n        </List>\n    )\n}","import React, {forwardRef} from 'react';\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\n\nexport default function generateTableIcons(props) {\n    const {onClickEditButton} = props;\n\n    return  {\n        Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n        Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n        Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n        Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n        DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n        Edit: forwardRef((props, ref) => <Edit\n            {...props} ref={ref} onClick={onClickEditButton}\n        />),\n        Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n        Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n        FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n        LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n        NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n        PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n        ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n        Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n        SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n        ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n        ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n    };\n}","import React, {useContext, useState, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport MaterialTable from \"material-table\";\n\nimport generateTableIcons from \"./helpers/TableIcons\";\nimport {RealmContext} from \"../../context/RealmContext\";\n\nSimpleTable.propTypes = {\n    projectId: PropTypes.string.isRequired,\n    tableName: PropTypes.string.isRequired,\n    currentColumns: PropTypes.array.isRequired,\n    currentData: PropTypes.array.isRequired\n}\n\nexport default function SimpleTable(props) {\n    const {\n        projectId, tableName,\n        currentColumns, currentData,\n    } = props;\n\n    const {isEditing, setIsEditing} = useContext(RealmContext);\n\n    const [columns, setColumns] = useState(currentColumns);\n    const [data, setData] = useState(currentData);\n\n    useEffect(() => {\n        !isEditing && setColumns(currentColumns);\n    }, [isEditing, projectId, currentColumns]);\n\n    useEffect(() => {\n        !isEditing && setData(currentData);\n    }, [isEditing, projectId, currentData]);\n\n    return (\n        <MaterialTable\n            title={tableName}\n            columns={columns}\n            data={data}\n            options={{\n                search:false,\n                sorting:false,\n                paging:false,\n                padding:\"dense\"\n            }}\n        />\n    );\n}","import React, {useContext, useState, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport MaterialTable from \"material-table\";\n\nimport generateTableIcons from \"./helpers/TableIcons\";\nimport {RealmContext} from \"../../context/RealmContext\";\n\nSimpleETable.propTypes = {\n    projectId: PropTypes.string.isRequired,\n    tableName: PropTypes.string.isRequired,\n    currentColumns: PropTypes.array.isRequired,\n    currentData: PropTypes.array.isRequired,\n    onUpdate: PropTypes.func\n}\n\nexport default function SimpleETable(props) {\n    const {\n        projectId, tableName,\n        currentColumns, currentData,\n        onUpdate\n    } = props;\n\n    const {isEditing, setIsEditing} = useContext(RealmContext);\n\n    const [columns, setColumns] = useState(currentColumns);\n    const [data, setData] = useState(currentData);\n\n    useEffect(() => {\n        !isEditing && setColumns(currentColumns);\n    }, [isEditing, projectId, currentColumns]);\n\n    useEffect(() => {\n        !isEditing && setData(currentData);\n    }, [isEditing, projectId, currentData]);\n\n    const onClickEditButton = () => setIsEditing(true);\n\n    return (\n        <MaterialTable\n            title={tableName}\n            icons={generateTableIcons({onClickEditButton})}\n            columns={columns}\n            data={data}\n            options={{\n                search:false,\n                sorting:false,\n                paging:false,\n                padding:\"dense\"\n            }}\n            editable={{\n                isEditable: rowData => rowData.editable,\n                onRowUpdate: async (newData, oldData) => {\n                    try {\n                        const {tableKey, updateKey} = newData;\n                        await onUpdate({updateKey, value: newData[tableKey]});\n                        const dataUpdate = [...data];\n                        const index = oldData.tableData.id;\n                        dataUpdate[index] = newData;\n                        setData([...dataUpdate]);\n                        setIsEditing(false);\n                    } catch (e) {\n                        console.error(e);\n                        setIsEditing(false);\n                    }\n                },\n                onRowUpdateCancelled: () => setIsEditing(false)\n            }}\n        />\n    );\n}","import React, {useContext, useState, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport MaterialTable from \"material-table\";\n\nimport generateTableIcons from \"./helpers/TableIcons\";\nimport {getThisMonth,getNextMonth} from \"../../helpers/date-util\";\nimport {RealmContext} from \"../../context/RealmContext\";\nimport {getCallFromThree} from \"../../helpers/forecast-util\";\n\nEditableCellTable.propTypes = {\n    projectId: PropTypes.string.isRequired,\n    milestoneId: PropTypes.string.isRequired,\n    tableName: PropTypes.string.isRequired,\n    currentColumns: PropTypes.array.isRequired,\n    currentData: PropTypes.array.isRequired,\n    onUpdate: PropTypes.func\n}\n\nexport default function EditableCellTable(props) {\n    const {\n        projectId, tableName,\n        currentColumns, currentData,\n        onUpdate\n    } = props;\n\n    const {isEditing, setIsEditing} = useContext(RealmContext);\n\n    const [columns, setColumns] = useState(currentColumns);\n    const [data, setData] = useState(currentData);\n\n    useEffect(() => {\n        !isEditing && setColumns(currentColumns);\n    }, [isEditing, projectId, currentColumns]);\n\n    useEffect(() => {\n        !isEditing && setData(currentData);\n    }, [isEditing, projectId, currentData]);\n\n    const onClickEditButton = () => setIsEditing(true);\n\n    return (\n        <MaterialTable\n            title={tableName}\n            icons={generateTableIcons({onClickEditButton})}\n            columns={columns}\n            data={data}\n            options={{\n                search:false,\n                sorting:false,\n                paging:false,\n                //padding:\"dense\"\n            }}\n            cellEditable={{\n                isCellEditable: (rowData, columnDef) => { //our hacked material table\n                    return (rowData.tableData.id > 4) && \n                            (columnDef.tableData.columnOrder >= 1) && (columnDef.tableData.columnOrder <= 3);\n                },\n                onCellEditStarted: (rowData, columnDef) => { //our hacked material table\n                    //setIsEditing(true);\n                },\n                onCellEditApproved: (newValue, oldValue, rowData, columnDef) => {\n                    // console.log(rowData)\n                    // console.log(columnDef);\n                    // console.log(getThisMonth(new Date()));\n                    // console.log(getNextMonth(getThisMonth(new Date())));\n                    // console.log(getNextMonth(getNextMonth(getThisMonth(new Date()))));\n                    var month, updateKey;\n                    switch (columnDef.tableData.columnOrder) {\n                        case 1: month = getThisMonth(new Date()); break;\n                        case 2: month = getNextMonth(new Date()); break;\n                        case 3: month = getNextMonth(getNextMonth(new Date(), false)); break;\n                        default: month = null; break;\n                    }\n\n                    switch (rowData.tableData.id) {\n                        case 5: updateKey = \"risk\"; break;\n                        case 6: updateKey = \"upside\"; break;\n                        default: updateKey = null; break;\n                    }\n                    //console.log({month, updateKey, value: parseFloat(newValue)})\n                    if (!month || !updateKey)\n                        return Promise.reject();\n\n                    const dataUpdate = [...data];\n                    const row = rowData.tableData.id;\n                    const column = columnDef.field;\n                    dataUpdate[row][column] = parseFloat(newValue);\n                    dataUpdate[row][\"cq_call\"] = getCallFromThree([dataUpdate[row][0], dataUpdate[row][1], dataUpdate[row][2]]);\n                    setData([...dataUpdate]);\n                    //console.log(data);\n\n                    var promise = onUpdate({month, updateKey, value: parseFloat(newValue)});\n\n                    //setIsEditing(false); //will generate a warning but that's ok I guess\n\n                    return promise;\n                }\n            }}\n            // editable={{\n            //     isEditable: rowData => rowData.editable,\n            //     onRowUpdate: async (newData, oldData) => {\n            //         try {\n            //             const {tableKey, updateKey} = newData;\n            //             await onUpdate({updateKey, value: newData[tableKey]});\n            //             const dataUpdate = [...data];\n            //             const index = oldData.tableData.id;\n            //             dataUpdate[index] = newData;\n            //             setData([...dataUpdate]);\n            //             setIsEditing(false);\n            //         } catch (e) {\n            //             console.error(e);\n            //             setIsEditing(false);\n            //         }\n            //     },\n            //     onRowUpdateCancelled: () => setIsEditing(false)\n            // }}\n        />\n    );\n}","import React, {useContext, useState, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport MaterialTable from \"material-table\";\n\nimport generateTableIcons from \"./helpers/TableIcons\";\nimport {RealmContext} from \"../../context/RealmContext\";\n\nContactsTable.propTypes = {\n    projectId: PropTypes.string.isRequired,\n    tableName: PropTypes.string.isRequired,\n    currentColumns: PropTypes.array.isRequired,\n    currentData: PropTypes.array.isRequired,\n    onUpdate: PropTypes.func\n}\n\nexport default function ContactsTable(props) {\n    const {\n        projectId, tableName,\n        currentColumns, currentData,\n        onUpdate\n    } = props;\n\n    const {isEditing, setIsEditing} = useContext(RealmContext);\n\n    const [columns, setColumns] = useState(currentColumns);\n    const [data, setData] = useState(currentData);\n\n    useEffect(() => {\n        !isEditing && setColumns(currentColumns);\n    }, [isEditing, projectId, currentColumns]);\n\n    useEffect(() => {\n        !isEditing && setData(currentData);\n    }, [isEditing, projectId, currentData]);\n\n    const onClickEditButton = () => setIsEditing(true);\n\n    return (\n        <MaterialTable\n            title={tableName}\n            icons={generateTableIcons({onClickEditButton})}\n            columns={columns}\n            data={data}\n            options={{\n                search:false,\n                sorting:false,\n                paging:false,\n                padding:\"dense\"\n            }}\n            editable={{\n                isEditable: rowData => rowData.editable,\n                onRowUpdate: async (newData, oldData) => {\n                    try {\n                        const {name, email, updateKey} = newData;\n                        await onUpdate({updateKey, value: {name, email}});\n                        const dataUpdate = [...data];\n                        const index = oldData.tableData.id;\n                        dataUpdate[index] = newData;\n                        setData([...dataUpdate]);\n                        setIsEditing(false);\n                    } catch (e) {\n                        console.error(e);\n                        setIsEditing(false);\n                    }\n                },\n                onRowUpdateCancelled: () => setIsEditing(false)\n            }}\n        />\n    );\n}","import {toEnUsDate,toDateOnly} from \"../../../helpers/dateFormatter\";\nimport {convertForecastIntoRows} from \"../../../helpers/forecast-util\";\nimport React, { Component } from 'react';\n\nfunction generateSFLink(id) {\n    return \"https://mongodb.my.salesforce.com/\" + id;\n}\n\nexport function generateMilestoneTableData(project, onClickPMStageButton) {\n    if (!project) return {\n        milestonesTableColumns: [],\n        milestonesTableRows: []\n    };\n\n    const {\n        _id,\n        owner, region,\n        project_manager,\n        account, name,\n        account_id,\n        opportunity, details,\n        survey_sent,\n        currentMilestone\n    } = project;\n\n    const milestonesTableColumns = [\n        {title: 'Project / Milestone Fields', field: 'name', editable: 'never'},\n        {title: 'Value', field: 'value', editable: 'onUpdate',\n        render: rowData => {\n                if (rowData.name === \"PM Stage\" && rowData.value === \"Closed\" && !rowData.survey_sent)\n                    return [rowData.value,\"   \",<button onClick={() => onClickPMStageButton(project)}>Send surveys</button>];\n\n                if (rowData.link)\n                    return <a href={rowData.link} target = \"_blank\" rel = \"noopener noreferrer\">{rowData.value}</a>;\n                \n                return rowData.value;\n             }\n        }\n    ];\n    const milestonesTableRows = [\n        {name: 'Project Owner', value: owner, editable: false},\n        {name: 'Region', value: region, editable: false},\n        {name: 'Project Manager', value: project_manager, editable: false},\n        {\n            name: 'PM Stage',\n            value: details.pm_stage,\n            editable: true,\n            survey_sent: survey_sent,\n            tableKey: 'value',\n            updateKey: 'details.pm_stage'\n        },\n        {name: 'Account', value: account, link: generateSFLink(account_id), editable: false},\n        {name: 'Opportunity', value: opportunity.name, link: generateSFLink(opportunity._id), editable: false},\n        {name: 'PS Project Name', value: name, link: generateSFLink(_id), editable: false},\n        {name: 'Milestone Name', value: currentMilestone.name, link: generateSFLink(currentMilestone._id), editable: false},\n        {name: 'Country', value: currentMilestone.country, editable: false},\n        {name: 'Milestone amount', value: currentMilestone.details.milestone_amount, editable: false},\n        {name: 'Gap Hours', value: currentMilestone.summary.gap_hours, editable: false},\n        {name: 'Unscheduled Hours', value: currentMilestone.summary.unscheduled_hours, editable: false},\n    ]\n\n    return {milestonesTableColumns, milestonesTableRows}\n}\n\nexport function generateContactsTableData(project) {\n    if (!project) return {\n        contactsTableColumns: [],\n        contactsTableRows: []\n    };\n\n    const {\n        _id,\n        contacts\n    } = project;\n\n    const contactsTableColumns = [\n        {title: 'Type', field: 'type', editable: 'never'},\n        {title: 'Name', field: 'name', editable: 'onUpdate'},\n        {title: 'Email', field: 'email', editable: 'onUpdate'}\n    ];\n    const contactsTableRows = [\n        {\n            type: 'Customer',\n            name: (contacts && contacts.customer) ? contacts.customer.name : \"\",\n            email: (contacts && contacts.customer) ? contacts.customer.email : \"\",\n            editable: true,\n            updateKey: 'contacts.customer'\n        },\n        {\n            type: 'Consulting Engineer',\n            name: (contacts && contacts.ce) ? contacts.ce.name : \"\",\n            email: (contacts && contacts.ce) ? contacts.ce.email : \"\",\n            editable: true,\n            updateKey: 'contacts.ce'\n        },\n    ]\n\n    return {contactsTableColumns, contactsTableRows}\n}\n\nexport function generateScheduleTableData(project) {\n    if (!project) return {\n        scheduleTableColumns: [],\n        scheduleTableRows: []\n    };\n\n    const {currentMilestone} = project;\n\n    const scheduleTableColumns = [\n        {title: 'Date', field: 'date', editable: 'never'},\n        {title: 'Scheduled', field: 'scheduled', editable: 'never'},\n        {title: 'Hours', field: 'hours', editable: 'never',\n            render: rowData => (rowData.hours_nonbillable == 0) \n                                ? rowData.hours \n                                : `${rowData.hours} (${rowData.hours_nonbillable} NB)`\n        },\n        {title: 'Resource(s)', field: 'resources', editable: 'never'}\n    ];\n    const scheduleTableRows = currentMilestone.schedule.map(s => {\n        return {\n            date: toDateOnly(s.week),\n            scheduled: s.revenue ? `$ ${s.revenue.toFixed(0)}` : '-',\n            hours: s.hours ? s.hours : '-',\n            resources: s.resources.join(','),\n            hours_nonbillable: s.hours_nonbillable ? s.hours_nonbillable : 0,\n            editable: false\n        };\n    });\n\n    return {scheduleTableColumns, scheduleTableRows}\n}\n\nexport function generateForecastTableData(project) {\n    if (!project) return {\n        forecastTableColumns: [],\n        forecastTableRows: []\n    };\n\n    const {currentMilestone, forecast} = project;\n\n    const forecastTableColumns = [\n        {title: 'N3M', field: 'name'},\n        {title: 'Month + 0', field: '0'},\n        {title: 'Month + 1', field: '1'},\n        {title: 'Month + 2', field: '2'},\n        {title: 'Current Quarter', field: 'cq_field'},\n        {title: 'Quarter Call', field: 'cq_call'},\n    ];\n\n    const forecastTableRows = convertForecastIntoRows(forecast);\n\n    // const scheduleTableRows = currentMilestone.schedule.map(s => {\n    //     return {\n    //         date: toDateOnly(s.week),\n    //         scheduled: s.revenue ? `$ ${s.revenue.toFixed(0)}` : '-',\n    //         hours: s.hours ? s.hours : '-',\n    //         editable: false\n    //     };\n    // });\n\n    return {forecastTableColumns, forecastTableRows}\n}","import React from \"react\";\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser';\n\n\nfunction generateCustSurveyLink(custName,custEmail,projectId) {\n\treturn \"https://mongodb.co1.qualtrics.com/jfe/form/SV_2oCghQbYfJdV5Mp?\" \n\t  + \"Name=\" + encodeURIComponent(custName)\n\t  + \"&Email=\" + encodeURIComponent(custEmail)\n\t  + \"&ProjectID=\" + encodeURIComponent(projectId);\n}\n\nfunction generateCeSurveyLink(ceName,ceEmail,projectId) {\n\treturn \"https://mongodb.co1.qualtrics.com/jfe/form/SV_aUX8tfdgGcbd4j3?\" \n\t  + \"Name=\" + encodeURIComponent(ceName)\n\t  + \"&Email=\" + encodeURIComponent(ceEmail)\n\t  + \"&ProjectID=\" + encodeURIComponent(projectId);\n}\n\n// export function custMessageHTMLBody(custName,custEmail,projectId) {\n//   return (\n//   \t  <div>\n// \t\t  Hi {custName},\n// \t\t  <br/>\n// \t\t  Thank you for using MongoDB Consulting.\n// \t\t  <br/>\n// \t\t  Take a quick <a href={generateCustSurveyLink(custName, custEmail, projectId)}>survey</a> and tell us about your experience below.\n// \t\t  <br/> <br/>\n// \t\t  MongoDB Professional Services\n// \t\t  <br/>\n// \t  </div>\n//   );\n// }\n\nexport function custMessageHTMLBody(custName,custEmail,projectId) {\n  return `\n  \t  <div>\n\t\t  Hi ${custName},\n\t\t  <br/><br/>\n\t\t  Thank you for using MongoDB Consulting.\n\t\t  <br/>\n\t\t  Take a quick <a href=${generateCustSurveyLink(custName, custEmail, projectId)}>survey</a> and tell us about your experience below.\n\t\t  <br/> <br/>\n\t\t  MongoDB Professional Services\n\t\t  <br/>\n\t  </div>`;\n}\n\nexport function ceMessageHTMLBody(ceName,ceEmail,projectId,projectDesc) {\n  return `\n  \t  <div>\n\t\t  Hi ${ceName},\n\t\t  <br/><br/>\n\t\t  Thank you for successfully completing the following PS Project: ${projectId} - ${projectDesc}.\n\t\t  <br/>\n\t\t  Take a quick <a href=${generateCeSurveyLink(ceName,ceEmail, projectId)}>survey</a> and share your experience below.\n\t\t  <br/> <br/>\n\t\t  MongoDB Professional Services\n\t\t  <br/>\n\t  </div>`;\n}\n\nexport function CustMessageTemplate(props) {\n  return (\n  <div>\n  <h1>Customer email</h1>\n  <b>To: {props.custEmail}</b><br/>\n  <b>From: MongoDB Consulting</b><br/>\n  <b>Subject: Thank you</b><br/>\n  {ReactHtmlParser(custMessageHTMLBody(props.custName, props.custEmail, props.projectId))}\n  </div>\n  );\n}\n\nexport function CeMessageTemplate(props) {\n  return (\n  <div>\n  <h1>CE email</h1>\n  <b>To: {props.ceEmail}</b><br/>\n  <b>From: MongoDB Consulting</b><br/>\n  <b>Subject: Complete post-engagement survey</b><br/>\n\t{ReactHtmlParser(ceMessageHTMLBody(props.ceName, props.ceEmail, props.projectId, props.projectDesc))}\n  </div>\n  );\n}","import { custMessageHTMLBody, ceMessageHTMLBody } from \"./MessageTemplate\";\n\n// export function genCustMessage(origEmail,custName,custEmail,projectId) {\n// \tconst messageParts = [\n//     `From: MongoDB Consulting <${origEmail}>`,\n//     `To: ${custName} <${custEmail}>`,\n//     'Content-Type: text/html; charset=utf-8',\n//     'MIME-Version: 1.0',\n//     `Subject: Thank you`,\n//     '',\n//     custMessageHTMLBody(custName, custEmail, projectId)\n//   ];\n//   const message = messageParts.join('\\n');\n\n//   return message\n// }\n\n// export function genCeMessage(origEmail,ceName,ceEmail,projectId,projectDesc) {\n// \tconst messageParts = [\n//     `From: MongoDB Consulting <${origEmail}>`,\n//     `To: ${ceName} <${ceEmail}>`,\n//     'Content-Type: text/html; charset=utf-8',\n//     'MIME-Version: 1.0',\n//     `Subject: Complete post-engagement survey`,\n//     '',\n//     ceMessageHTMLBody(ceName, ceEmail, projectId, projectDesc)\n//   ];\n//   const message = messageParts.join('\\n');\n\n//   return message\n// }\n\nexport function custMailParams(origEmail,custName,custEmail,projectId) {\n  var toEmail = custEmail, \n      subject = \"Thank you\",\n      html = custMessageHTMLBody(custName, custEmail, projectId);\n  return {origEmail, toEmail, subject, html}\n}\n\nexport function ceMailParams(origEmail,ceName,ceEmail,projectId,projectDesc) {\n  var toEmail = ceEmail, \n      subject = \"Complete post-engagement survey\",\n      html = ceMessageHTMLBody(ceName, ceEmail, projectId, projectDesc);\n  return {origEmail, toEmail, subject, html}\n}\n\n","import React, {useContext} from 'react';\nimport PropTypes from 'prop-types';\n\nimport SimpleTable from \"../common/SimpleTable\";\nimport SimpleETable from \"../common/SimpleETable\";\nimport EditableCellTable from \"../common/EditableCellTable\";\nimport ContactsTable from \"../common/ContactsTable\";\nimport {\n    generateMilestoneTableData,\n    generateScheduleTableData,\n    generateForecastTableData,\n    generateContactsTableData,\n} from \"../common/helpers/generateTablesData\";\nimport {\n    custMailParams,\n    ceMailParams\n} from \"../../helpers/survey/survey\";\nimport {RealmContext} from \"../../context/RealmContext\";\n\nMilestonesInfo.propTypes = {\n    classes: PropTypes.object.isRequired,\n    project: PropTypes.object.isRequired,\n};\n\nexport default function MilestonesInfo(props) {\n    const {classes, project} = props;\n    const {dbCollection, fcstCollection, user} = useContext(RealmContext);\n\n    const onClickPMStageButton = async (project) => {\n        var origEmail = user.profile.email,\n            contacts = project.contacts,\n            custName = (contacts && contacts.customer) ? contacts.customer.name : null,\n            custEmail = (contacts && contacts.customer) ? contacts.customer.email : null,\n            projectNameSpaceIndex = project.name.indexOf(\" \"),\n            projectId = project.name.substring(0, projectNameSpaceIndex),\n            projectDesc = project.name.substring(projectNameSpaceIndex + 1),\n            ceName = (contacts && contacts.ce) ? contacts.ce.name : null,\n            ceEmail = (contacts && contacts.ce) ? contacts.ce.email : null;\n\n        if (!custName || !custEmail || !ceName || !ceEmail) {\n            alert(`Contact information isn't complete!`);\n            return;\n        }\n        console.log(custMailParams(origEmail,custName,custEmail,projectId))\n        console.log(ceMailParams(origEmail,ceName,ceEmail,projectId,projectDesc))\n        await user.callFunction(\"sendMail\",custMailParams(origEmail,custName,custEmail,projectId));\n        await user.callFunction(\"sendMail\",ceMailParams(origEmail,ceName,ceEmail,projectId,projectDesc));\n\n        await dbCollection.updateOne({_id: project._id},{$set:{survey_sent:true, survey_sent_ts: new Date()}});\n\n        alert(`Surveys sent!`);\n    }\n\n    const {\n        milestonesTableColumns,\n        milestonesTableRows\n    } = generateMilestoneTableData(project, onClickPMStageButton);\n\n    const {\n        scheduleTableColumns,\n        scheduleTableRows\n    } = generateScheduleTableData(project);\n\n    const {\n        forecastTableColumns,\n        forecastTableRows\n    } = generateForecastTableData(project);\n\n    const {\n        contactsTableColumns,\n        contactsTableRows\n    } = generateContactsTableData(project);\n\n    const handleUpdateRow = async ({updateKey, value}) => {\n        const query = {_id: project._id};\n        const update = {'$set': {[updateKey]: value}};\n        const options = {'upsert': false};\n        await dbCollection.updateOne(query, update, options);\n    }\n\n    const handleUpdateForecast = async ({month, updateKey, value}) => {\n        const query = {milestoneId: project.currentMilestone._id, \"month\": month};\n        const update = {'$set': {[updateKey]: value}};\n        const options = {'upsert': true};\n        await fcstCollection.updateOne(query, update, options);\n    }\n\n    return (<>\n        {milestonesTableRows.length !== 0 && <div className={classes.tableContainer}>\n            <SimpleETable\n                projectId={project._id}\n                tableName='Project milestone info'\n                currentColumns={milestonesTableColumns}\n                currentData={milestonesTableRows}\n                onUpdate={handleUpdateRow}\n            />\n        </div>}\n        {<div className={classes.tableContainer}>\n            <ContactsTable\n                projectId={project._id}\n                tableName='Contact Information'\n                currentColumns={contactsTableColumns}\n                currentData={contactsTableRows}\n                onUpdate={handleUpdateRow}\n            />\n        </div>}\n        {scheduleTableRows.length !== 0 && <div className={classes.tableContainer}>\n            <SimpleTable\n                projectId={project._id}\n                tableName='Schedule'\n                currentColumns={scheduleTableColumns}\n                currentData={scheduleTableRows}\n            />\n        </div>}\n        {forecastTableRows.length !== 0 && <div className={classes.tableContainer}>\n            <EditableCellTable\n                projectId={project._id}\n                milestoneId={project.currentMilestone._id}\n                tableName='Forecast'\n                currentColumns={forecastTableColumns}\n                currentData={forecastTableRows}\n                onUpdate={handleUpdateForecast}\n            />\n        </div>}\n    </>)\n}","import React, {useContext} from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\n\nimport {RealmContext} from \"../../context/RealmContext\";\nimport MilestonesInfo from \"./MilestonesInfo\";\n\nconst useStyles = makeStyles({\n    tableContainer: {\n        marginTop: '20px'\n    }\n});\n\nMilestonesInfoPaper.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default function MilestonesInfoPaper(props) {\n    const containerClasses = useStyles();\n    const {classes} = props;\n    const {projectWithCurrentMilestone, projects} = useContext(RealmContext);\n\n    let project = null;\n    let currentMilestone = null;\n    let forecast = null;\n    if (projectWithCurrentMilestone) {\n        // const {projectId, milestoneId} = projectWithCurrentMilestone;\n        // const foundProjects = projects.filter(p => p._id === projectId);\n        // if (foundProjects && foundProjects.length) {\n        //     project = foundProjects[0];\n        //     const foundMilestones = project.milestones.filter(m => m._id === milestoneId);\n        //     currentMilestone = foundMilestones && foundMilestones.length ? foundMilestones[0] : null;\n        // }\n        project = projectWithCurrentMilestone.project\n        //project = projects.filter(p => p._id === project._id)[0];\n        currentMilestone = projectWithCurrentMilestone.milestone\n        forecast = projectWithCurrentMilestone.forecast\n    }\n\n    return (\n        <Grid container>\n            <Grid item xs={12}>\n                <Paper className={classes.paper}>\n                    <Typography variant=\"h4\" gutterBottom>\n                        Milestones overview\n                    </Typography>\n                    <Divider />\n\n                    {project && currentMilestone\n                        ? <MilestonesInfo\n                            classes={containerClasses}\n                            project={{...project, currentMilestone, forecast}}\n                        />\n                        : <div className={containerClasses.tableContainer}>\n                            <Typography variant=\"body1\">\n                                Click on project milestone to see an overview...\n                            </Typography>\n                        </div>\n                    }\n                </Paper>\n            </Grid>\n        </Grid>\n    )\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport ProjectsList from \"./projects/ProjectsList\";\nimport MilestonesInfoPaper from \"./projects/MilestonesInfoPaper\";\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        marginTop: 70,\n        display: 'flex',\n        flexDirection: 'row'\n    },\n    root: {\n        width: '90vh',\n        backgroundColor: theme.palette.background.paper,\n        position: 'relative',\n        overflow: 'auto',\n        minHeight: '90vh',\n        height: '90vh'\n    },\n    paper: {\n        padding: theme.spacing(1),\n        textAlign: 'center',\n        color: theme.palette.text.primary,\n        whiteSpace: 'normal',\n        marginBottom: theme.spacing(1),\n        marginLeft: theme.spacing(2),\n        marginRight: theme.spacing(1),\n        maxHeight: '90vh',\n        overflow: 'auto'\n    },\n}));\n\nexport default function ProjectsContainer() {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.container}>\n            <ProjectsList classes={{listRoot: classes.root}} />\n            <MilestonesInfoPaper classes={{paper: classes.paper}}/>\n        </div>\n    )\n}","import gql from 'graphql-tag'\n\nexport const FIND_PROJECTS = gql`\n    query FindProjectsCustomResolver($filtersInput: FiltersInput!) {\n        psprojectsData(input: $filtersInput) {\n            _id\n            account\n            account_id\n            active\n            details {\n                pm_stage\n                pm_project_status\n                product_end_date\n            }\n            opportunity {\n                name\n                owner\n                engagement_manager\n                _id\n            }\n            milestones {\n                _id\n                country\n                currency\n                name\n                summary {\n                    planned_hours\n                    sold_hours\n                    delivered_hours\n                    gap_hours\n                    unscheduled_hours\n                }\n                details {\n                    first_scheduled_date\n                    last_scheduled_date\n                    bill_rate\n                    milestone_amount\n                    delivered_amount\n                }\n            }\n            name\n            owner\n            project_manager\n            region\n            stage\n            survey_sent\n            contacts {\n                customer {\n                    name\n                    email\n                }\n                ce {\n                    name\n                    email\n                }\n            }\n        }\n    }\n`;","import React, {useContext} from 'react';\nimport {useQuery, useLazyQuery} from \"@apollo/client\";\n\nimport {RealmContext} from \"../context/RealmContext\";\nimport TopPanel from \"../components/TopPanel\";\nimport ProjectsContainer from \"../components/ProjectsContainer\";\nimport {FIND_PROJECTS} from \"../graphql/graphql-operations\";\n\nexport default function MainPage() {\n    const {\n        setProjects,\n        setLoadProcessing,\n        cleanLocalProjects,\n        filter, sort, watcher\n    } = useContext(RealmContext);\n\n    const getSortOrder = () => {\n        const {field, order} = sort;\n        return {field, order: order === 'DESC' ? -1 : 1};\n    }\n\n    const queryOptions = {\n        variables: {\n            filtersInput: {\n                filter: {...filter},\n                sort: getSortOrder()\n            }\n        }\n    };\n\n    const [fetchProjects] = useLazyQuery(\n        FIND_PROJECTS,\n        {\n            ...queryOptions,\n            onCompleted: data => {\n                setProjects(data.psprojectsData);\n                setLoadProcessing(false);\n            },\n            onError: error => {\n                console.error(error);\n            },\n            fetchPolicy: 'network-only'\n        }\n    );\n\n    const fetchProjectsByTrigger = async ({needToClean}) => {\n        needToClean && await cleanLocalProjects();\n        await fetchProjects();\n    }\n\n    let timerId = setTimeout(async function watchForUpdates() {\n        timerId && clearTimeout(timerId);\n        await watcher();\n        timerId = setTimeout(watchForUpdates, 5000);\n    }, 5000);\n\n    return (<>\n        <TopPanel fetchProjects={fetchProjectsByTrigger} />\n        <ProjectsContainer />\n    </>)\n}","import React, {useContext, useEffect, useState} from 'react';\nimport {\n    ApolloProvider,\n    ApolloClient,\n    HttpLink,\n    InMemoryCache\n} from \"@apollo/client\";\n\nimport {RealmContext} from \"./context/RealmContext\";\nimport MainPage from \"./containers/MainPage\";\n\nexport default function RealmApolloProvider() {\n    const {\n        realmAppId,\n        getUserAccessToken,\n        user\n    } = useContext(RealmContext);\n\n    const [client, setClient] = useState(createApolloClient(realmAppId, getUserAccessToken));\n    useEffect(() => {\n        setClient(\n            createApolloClient(realmAppId, getUserAccessToken)\n        );\n    }, [user]);\n\n    return (\n        <ApolloProvider client={client}>\n            <MainPage />\n        </ApolloProvider>\n    )\n}\n\nfunction createApolloClient(realmAppId, getUserAccessToken) {\n    const graphQlUrl = `https://realm.mongodb.com/api/client/v2.0/app/${realmAppId}/graphql`;\n\n    return new ApolloClient({\n        link: new HttpLink({\n            uri: graphQlUrl,\n            fetch: async (uri, options) => {\n                const accessToken = await getUserAccessToken();\n                options.headers.Authorization = `Bearer ${accessToken}`;\n                return fetch(uri, options);\n            },\n        }),\n        cache: new InMemoryCache()\n    });\n}","import React, {useContext, useRef, useEffect} from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport {RealmContext} from \"./context/RealmContext\";\nimport SignInPage from \"./containers/SignInPage\";\nimport RealmApolloProvider from \"./RealmApolloProvider\";\n\nexport default function RealmApp() {\n    const {\n        app, appName, copyrightLink,\n        googleSignIn, googleHandleRedirect, user, setUser,\n    } = useContext(RealmContext);\n\n    const appRef = useRef(app);\n\n    useEffect(() => {\n        setUser(app.currentUser);\n    }, [appRef.current.currentUser]);\n\n    return (\n        <Router>\n          <Switch>\n            <Route\n                exact path=\"/google-callback\"\n                render={() => <div>\n                    Google Callback {googleHandleRedirect()}\n                </div>}\n            />\n            <Route path=\"/*\" render={() => \n                user ?  <RealmApolloProvider /> : <SignInPage\n                    appName={appName}\n                    copyrightLink={copyrightLink}\n                    googleSignIn={googleSignIn}\n                />\n                }/>\n          </Switch>\n        </Router>\n    )\n}","import React, {Component} from 'react';\n\nimport RealmContextContainer from \"./context/RealmContext\";\nimport RealmApp from \"./RealmApp\";\n\nimport './App.css';\n\nclass App extends Component {\n    render() {\n        return (\n            <div className=\"App\">\n                <RealmContextContainer>\n                    <RealmApp />\n                </RealmContextContainer>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}